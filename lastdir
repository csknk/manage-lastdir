#!/bin/bash
#
# Save the current working directory into a logfile. Change to the last saved directory in the log.
#
# Options:
# * No options: save the output of $PWD to the log
# * -o: Open the last location saved in the log - if index number supplied, cd into the relevant dir.
# * -p: Print the log
# * -d: Delete all log entries except for the last line
#
# Because the functionality involves opening the shell in a specified directory, this file
# should be sourced rather than run.
#
# To do this, save the current file in your $PATH and create an alias such as:
# `alias lastdir=". lastdir"`.
# ===========================================================================================================
function run_lastdir {
	local LOG_DIR=$HOME/logs
	local LASTDIR_LOG=${LOG_DIR}/lastdir
	mkdir -p ${LOG_DIR}
	local OPTIND opt o p d
	received_options=false
	while getopts ":opd" opt; do
		received_options=true
		case "${opt}" in
			o)
				# Check next positional parameter
				nextopt=${!OPTIND}
				index=-1
				if [[ -n $nextopt && $nextopt != -* ]]; then
					OPTIND=$((OPTIND + 1))
					index=$((-1 - $nextopt))
				fi
				cd $(tail ${index} ${LASTDIR_LOG} | head -1)
				;;
			p)
				echo "printing ${LASTDIR_LOG}..."
				line_number=$(wc -l < ${LASTDIR_LOG})
				for line in $(cat ${LASTDIR_LOG}); do
					(( line_number = line_number - 1 ))
					echo -e "${line_number}:\t${line}"
				done
				;;
			d)
				sed -i '$!d' ${LASTDIR_LOG}
				;;
			\?)
				echo "Invalid option: -${OPTARG}" >&2
				;;
		esac
	done

	if [[ "${received_options}" == "false" ]]; then
		echo "lastdir saving $PWD to ${LASTDIR_LOG}..."
		touch ${LASTDIR_LOG}
		[[ $PWD != $(awk 'END{print}' ${LASTDIR_LOG}) ]] && echo $PWD >> ${LASTDIR_LOG}
	fi
}

run_lastdir $@
